apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-02-12T09:06:27Z"
  deletionGracePeriodSeconds: 30
  deletionTimestamp: "2023-02-12T09:11:57Z"
  generateName: influxdb-
  labels:
    app: influxdb
    controller-revision-hash: influxdb-5fc5bd44bc
    statefulset.kubernetes.io/pod-name: influxdb-0
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:controller-revision-hash: {}
          f:statefulset.kubernetes.io/pod-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"afd17b42-c018-4fff-9c21-80b53ed84f48"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:containers:
          k:{"name":"influxdb"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8086,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":8088,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/influxdb"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/influxdb"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostname: {}
        f:nodeName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:subdomain: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"influxdb-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"influxdb-data"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-02-12T09:06:27Z"
  name: influxdb-0
  namespace: acbot-influx
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: influxdb
    uid: afd17b42-c018-4fff-9c21-80b53ed84f48
  resourceVersion: "305135101"
  selfLink: /api/v1/namespaces/acbot-influx/pods/influxdb-0
  uid: 37acb06f-c82b-4ea7-8646-4d109053784c
spec:
  containers:
  - image: influxdb:1.7.9
    imagePullPolicy: IfNotPresent
    name: influxdb
    ports:
    - containerPort: 8086
      hostPort: 8086
      name: influxdb
      protocol: TCP
    - containerPort: 8088
      hostPort: 8088
      name: meta
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/influxdb
      name: influxdb-data
      subPath: influxdb
    - mountPath: /etc/influxdb
      name: influxdb-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-75lq7
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: influxdb-0
  nodeName: hyy-k8s-6
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: influxdb-hd
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: influxdb-data
    persistentVolumeClaim:
      claimName: influxdb-pvc
  - configMap:
      defaultMode: 420
      name: influxdb-cm
    name: influxdb-config
  - name: default-token-75lq7
    secret:
      defaultMode: 420
      secretName: default-token-75lq7
status:
  phase: Pending
  qosClass: BestEffort
